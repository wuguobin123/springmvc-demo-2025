worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # 基础设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/javascript application/xml+rss 
               application/json application/xml;

    upstream springmvc_backend {
        server springmvc-app:8080;
        # 添加健康检查和负载均衡
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost;
        
        # 通用代理设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 健康检查 - 放在最前面，优先匹配
        location = /health {
            access_log off;
            proxy_pass http://springmvc_backend/api/health;
            proxy_connect_timeout 1s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # MCP SSE端点配置 - 具体路径优先
        # MCP SSE端点配置
        location = /api/mcp/sse {
            proxy_pass http://springmvc_backend/api/mcp/sse;
            
            # 基础代理头部
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # SSE专用头部
            proxy_set_header Accept "text/event-stream";
            proxy_set_header Cache-Control "no-cache";
            proxy_set_header X-Accel-Buffering no;
            
            # 保留原始请求头
            proxy_pass_request_headers on;
            proxy_set_header X-Requested-With $http_x_requested_with;
            proxy_set_header Origin $http_origin;
            proxy_set_header Referer $http_referer;
            
            # HTTP/1.1 和连接设置
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Upgrade $http_upgrade;
            
            # 禁用缓冲
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            
            # 超时设置
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 86400s;
            
            # 允许所有HTTP方法
            proxy_method $request_method;
        }


        # MCP消息端点配置
        location = /api/mcp/message {
            proxy_pass http://springmvc_backend/api/mcp/message;
            
            # 标准API请求设置
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # AI流式输出配置
        location = /api/ai/stream {
            proxy_pass http://springmvc_backend/api/ai/stream;
            
            # SSE专用设置
            proxy_set_header Accept text/event-stream;
            proxy_set_header X-Accel-Buffering no;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_buffering off;
            
            proxy_connect_timeout 1s;
            proxy_send_timeout 10s;
            proxy_read_timeout 3600s;
        }

        # 静态资源缓存 - 使用更精确的匹配
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://springmvc_backend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }

        # API路径
        location ^~ /api/ {
            proxy_pass http://springmvc_backend;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # 默认路径 - 放在最后
        location / {
            proxy_pass http://springmvc_backend;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # 日志配置
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log;
    }
}
